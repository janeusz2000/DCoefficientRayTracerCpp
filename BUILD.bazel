load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_library

# cmake_external(
#     # expect to find ./lib/hello.lib as the result of the build
#     name = "hello",
#     # This option can be omitted
#     cmake_options = ["-G \"Visual Studio 15 2017 Win64\""],
#     generate_crosstool_file = True,
#     lib_source = ":srcs",
#     # .vcxproj or .sln file must be specified argument, as multiple files are generated by CMake
#     make_commands = ["MSBuild.exe INSTALL.vcxproj"],
# )

# cmake_external(
#     name = "hello_ninja",
#     # expect to find ./lib/hello.lib as the result of the build
#     lib_name = "hello",
#     # explicitly specify the generator
#     cmake_options = ["-GNinja"],
#     generate_crosstool_file = True,
#     lib_source = ":srcs",
#     # specify to call ninja after configuring
#     make_commands = [
#         "ninja",
#         "ninja install",
#     ],
# )

# cmake_external(
#     name = "hello_nmake",
#     # explicitly specify the generator
#     cmake_options = ["-G \"NMake Makefiles\""],
#     generate_crosstool_file = True,
#     lib_source = ":srcs",
#     # specify to call nmake after configuring
#     make_commands = [
#         "nmake",
#         "nmake install",
#     ],
#     # expect to find ./lib/hello.lib as the result of the build
#     static_libraries = ["hello.lib"]
# )

cc_library(
    name = "utils",
    srcs = [
        "core/ray.cpp",
        "core/vec3.cpp",
        "main/sceneManager.cpp",
        "obj/generators.cpp",
        "obj/objects.cpp",
        "main/model.cpp",
        "main/simulator.cpp",
        "main/rayTracer.cpp"
    ],
    hdrs = [
        "constants.h",
        "core/ray.h",
        "core/vec3.h",
        "main/sceneManager.h",
        "obj/generators.h",
        "obj/objects.h",
        "main/model.h",
        "main/simulator.h",
        "main/rayTracer.h",
    ],
)

cc_test(
    name = "object_utils_test",
    srcs = [
        "tests/object_utils_test.cpp",
    ],

    deps = [
        ":utils",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "simulator_test",
    srcs = [
        "tests/simulator_test.cpp",
    ],
    deps = [
        ":utils",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "sphereCollision_test",
    srcs = [
        "tests/sphere_test.cpp",
    ],
    deps = [
        ":utils",
        "@com_google_googletest//:gtest_main",
    ]
)

cc_test(
    name = "rayTracer_test",
    srcs = [
        "tests/rayTracer_test.cpp",
    ],
    deps = [
        ":utils",
        "@com_google_googletest//:gtest_main",
    ]
)

cc_test(
    name = "generator_test",
    srcs = [
        "tests/generator_test.cpp",
    ],
    deps = [
        ":utils",
        "@com_google_googletest//:gtest_main",
    ]
)
